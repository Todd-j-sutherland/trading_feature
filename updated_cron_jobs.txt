# Updated Cron Jobs for ASX Trading System with IG Markets + Paper Trading
# Generated: September 2025
# Compatible with: Main app with IG Markets integration + Paper Trading app

# =============================================================================
# MAIN APPLICATION - ASX Trading System with IG Markets Integration
# =============================================================================

# Morning routine with IG Markets integration - 09:30 AEST (23:30 UTC previous day)
30 23 * * 0-4 cd /root/test && source /root/trading_venv/bin/activate && export PYTHONPATH=/root/test && python -m app.main morning >> /root/test/logs/morning_ig_markets.log 2>&1

# Enhanced predictions with IG Markets - Every 30 minutes during ASX market hours
# ASX Hours: 10:30-15:30 AEST = 00:30-05:30 UTC (UTC+10 timezone)
*/30 0-5 * * 1-5 cd /root/test && source /root/trading_venv/bin/activate && export PYTHONPATH=/root/test && python enhanced_efficient_system.py >> /root/test/logs/predictions_ig_markets.log 2>&1

# Enhanced evening analysis with IG Markets data - 18:00 AEST (08:00 UTC) weekdays
0 8 * * 1-5 cd /root/test && source /root/trading_venv/bin/activate && export PYTHONPATH=/root/test && python -m app.main evening >> /root/test/logs/evening_ig_markets.log 2>&1

# Daily status check with IG Markets health - 08:00 AEST (22:00 UTC previous day)
0 22 * * 0-4 cd /root/test && source /root/trading_venv/bin/activate && export PYTHONPATH=/root/test && python -m app.main status >> /root/test/logs/daily_status_ig_markets.log 2>&1

# Weekly maintenance with IG Markets statistics - Sunday 20:00 AEST (10:00 UTC)
0 10 * * 0 cd /root/test && source /root/trading_venv/bin/activate && export PYTHONPATH=/root/test && python -m app.main weekly >> /root/test/logs/weekly_maintenance.log 2>&1

# IG Markets integration test - Daily at 07:00 AEST (21:00 UTC previous day)
0 21 * * 0-4 cd /root/test && source /root/trading_venv/bin/activate && export PYTHONPATH=/root/test && python -m app.main ig-markets-test >> /root/test/logs/ig_markets_test.log 2>&1

# =============================================================================
# PAPER TRADING APPLICATION with IG Markets Integration
# =============================================================================

# Paper trading service with IG Markets - Continuous during market hours
# Start service at 10:15 AEST (00:15 UTC) - 15 min before market open (10:30 AEST)
15 0 * * 1-5 cd /root/test/paper-trading-app && source ./paper_trading_venv/bin/activate && python run_paper_trading_ig.py service >> /root/test/logs/paper_trading_ig_service.log 2>&1 &

# Paper trading health check - Every hour during market hours (10:30-15:30 AEST)
30 0-5 * * 1-5 cd /root/test/paper-trading-app && source ./paper_trading_venv/bin/activate && python -c "
from enhanced_paper_trading_service_with_ig import EnhancedPaperTradingServiceWithIG
try:
    service = EnhancedPaperTradingServiceWithIG()
    summary = service.get_enhanced_portfolio_summary()
    print(f'Portfolio: {summary.get(\"active_positions\", 0)} positions, Total P&L: ${summary.get(\"total_profit\", 0):.2f}')
    if service.ig_markets_enabled:
        stats = service.get_data_source_stats() if hasattr(service, 'get_data_source_stats') else {}
        print(f'IG Markets: {stats.get(\"ig_markets_requests\", 0)} requests, Health: {\"OK\" if service.enhanced_price_source.is_ig_markets_healthy() else \"FAIL\"}')
except Exception as e:
    print(f'Paper trading health check failed: {e}')
" >> /root/test/logs/paper_trading_health.log 2>&1

# Paper trading daily summary - End of trading day 15:45 AEST (05:45 UTC)
45 5 * * 1-5 cd /root/test/paper-trading-app && source ./paper_trading_venv/bin/activate && python -c "
from enhanced_paper_trading_service_with_ig import EnhancedPaperTradingServiceWithIG
import json
from datetime import datetime
try:
    service = EnhancedPaperTradingServiceWithIG()
    summary = service.get_enhanced_portfolio_summary()
    print(f'=== Paper Trading Daily Summary - {datetime.now().strftime(\"%Y-%m-%d\")} ===')
    print(json.dumps(summary, indent=2, default=str))
except Exception as e:
    print(f'Daily summary generation failed: {e}')
" >> /root/test/logs/paper_trading_daily_summary.log 2>&1

# Stop paper trading service after market close - 15:45 AEST (05:45 UTC)
50 5 * * 1-5 pkill -f "run_paper_trading_ig.py service" && echo "$(date): Paper trading service stopped for end of day" >> /root/test/logs/paper_trading_lifecycle.log 2>&1

# =============================================================================
# SHARED MAINTENANCE & MONITORING
# =============================================================================

# Hourly prediction outcome evaluation (shared between both systems)
0 * * * * cd /root/test && source /root/trading_venv/bin/activate && ./evaluate_predictions.sh >> /root/test/logs/prediction_evaluation.log 2>&1

# Database backup - Daily at 02:00 AEST (16:00 UTC previous day)
0 16 * * * cd /root/test && tar -czf "backups/trading_data_backup_$(date +\%Y\%m\%d).tar.gz" data/ paper-trading-app/*.db >> /root/test/logs/backup.log 2>&1

# Log rotation - Weekly on Sunday at 01:00 AEST (15:00 UTC Saturday)
0 15 * * 6 cd /root/test/logs && for log in *.log; do [ -f "$log" ] && mv "$log" "${log}.$(date +\%Y\%m\%d)" && touch "$log"; done

# System health check - Every 6 hours
0 */6 * * * cd /root/test && echo "=== System Health $(date) ===" >> /root/test/logs/system_health.log && df -h /root/test >> /root/test/logs/system_health.log && uptime >> /root/test/logs/system_health.log && echo "" >> /root/test/logs/system_health.log

# IG Markets integration health - Every 2 hours during business days
0 */2 * * 1-5 cd /root/test && source /root/trading_venv/bin/activate && export PYTHONPATH=/root/test && python -c "
try:
    from app.core.data.collectors.enhanced_market_data_collector import EnhancedMarketDataCollector
    collector = EnhancedMarketDataCollector()
    health = collector.is_ig_markets_healthy()
    stats = collector.get_data_source_stats()
    print(f'{\"$(date)\"}: IG Markets Health: {\"OK\" if health else \"FAIL\"}, Stats: {stats}')
except Exception as e:
    print(f'{\"$(date)\"}: IG Markets health check failed: {e}')
" >> /root/test/logs/ig_markets_health.log 2>&1

# =============================================================================
# CLEANUP & OPTIMIZATION
# =============================================================================

# Clean old backup files - Monthly on 1st at 03:00 AEST (17:00 UTC previous day)
0 17 1 * * find /root/test/backups -name "*.tar.gz" -mtime +30 -delete && echo "$(date): Old backups cleaned" >> /root/test/logs/cleanup.log 2>&1

# Clean old log files - Monthly on 1st at 03:30 AEST (17:30 UTC previous day)
30 17 1 * * find /root/test/logs -name "*.log.*" -mtime +7 -delete && echo "$(date): Old logs cleaned" >> /root/test/logs/cleanup.log 2>&1

# Database optimization - Weekly on Sunday at 03:00 AEST (17:00 UTC Saturday)
0 17 * * 6 cd /root/test && sqlite3 data/trading_predictions.db "VACUUM;" && sqlite3 paper-trading-app/paper_trading.db "VACUUM;" && echo "$(date): Database optimized" >> /root/test/logs/maintenance.log 2>&1
